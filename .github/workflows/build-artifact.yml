name: Build releases

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v2

      - name: Install cross
        run: cargo install cross

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}

      - name: Build and package ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cross build --target ${{ matrix.target }} --release
          mkdir -p release
          tar -cJf release/github-actions-test.${{ steps.get_version.outputs.version }}.${{ matrix.target }}.tar.xz target/${{ matrix.target }}/release/github-actions-test

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*
  build-osx:
  runs-on: ubuntu-latest
  steps:
    - name: Set up OSX compilation toolchain
      run: |
        git clone https://github.com/tpoechtrager/osxcross
        cd osxcross
        wget -nc https://s3.dockerproject.org/darwin/v2/MacOSX10.10.sdk.tar.xz
        mv MacOSX10.10.sdk.tar.xz tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
    - id: get_version
      uses: battila7/get-version-action@v2
    - name: build for OSX
      run: |
        PATH="$(pwd)/osxcross/target/bin:$PATH" \
        cargo build --target x86_64-apple-darwin
        mkdir -p release
        tar -cJf release/github-actions-test.${{ steps.get_version.outputs.version }}.x86_64-apple-darwin.tar.xz target/x86_64-apple-darwin/release/github-actions-test
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: release/
