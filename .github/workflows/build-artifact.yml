name: Build releases

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          # - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v2

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}

      - name: Build and package ${{ matrix.target }}
        timeout-minutes: 120
        run: ./build/build-linux.sh -v ${{ steps.get_version.outputs.version }} -t ${{ matrix.target }}

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*

  build-osx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: get_version
        uses: battila7/get-version-action@v2

      - name: build for OSX
        run: ./build/install-osxcross.sh  && ./build/build-osx.sh -v ${{ steps.get_version.outputs.version }}
        # run: cd build && ./build-osx.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*
