name: Build releases

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  # build-cross:
  #   runs-on: ubuntu-latest
  #   env:
  #     RUST_BACKTRACE: full
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-unknown-linux-musl
  #         - x86_64-unknown-linux-gnu

  #   steps:
  #     - uses: actions/checkout@v2

  #     - id: get_version
  #       uses: battila7/get-version-action@v2

  #     - run: echo ${{ steps.get_version.outputs.version }}
  #     - run: cargo install cross

  #     - name: Build and package ${{ matrix.target }}
  #       timeout-minutes: 120
  #       run: |
  #         cross build --target ${{ matrix.target }} --release
  #         mkdir -p release
  #         tar -cJf release/github-actions-test.${{ steps.get_version.outputs.version }}.${{ matrix.target }}.tar.xz target/${{ matrix.target }}/release/github-actions-test
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: release/*

  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install GNU tar
        run: |
          brew install gnu-tar
          # echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Build and package osx
        timeout-minutes: 120
        run: |
          cargo build --target --release
          mkdir -p release
          tar -cJf release/github-actions-test.${{ steps.get_version.outputs.version }}.x86_64-apple-darwin.tar.xz target/release/github-actions-test
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*
